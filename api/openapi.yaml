openapi: 3.0.3
info:
  title: Subscription Service API
  version: 1.0.0
  description: API for managing user server with PostgreSQL backend

servers:
  - url: http://localhost:8000/api
    description: Development server

paths:
  /subscriptions:
    post:
      summary: Create a new subscription
      description: Create a new subscription record for a user
      tags:
        - Subscriptions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCreate'
      responses:
        '201':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: List server with filtering
      description: Retrieve server with optional filtering and pagination
      tags:
        - Subscriptions
      parameters:
        - name: user_ids
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: uuid
          style: form
          explode: false
          description: Filter by user IDs (comma-separated)
        - name: service_names
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: string
          style: form
          explode: false
          description: Filter by service names (comma-separated)
        - name: start_date_from
          in: query
          required: false
          schema:
            type: string
            pattern: '^\d{2}-\d{4}$'
          description: Filter by start date (MM-YYYY) from
        - name: start_date_to
          in: query
          required: false
          schema:
            type: string
            pattern: '^\d{2}-\d{4}$'
          description: Filter by start date (MM-YYYY) to
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number for pagination
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
          description: Number of items per page
      responses:
        '200':
          description: List of server
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Subscription'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          description: Invalid filter parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /subscriptions/{id}:
    get:
      summary: Get subscription by ID
      description: Retrieve a specific subscription by its ID
      tags:
        - Subscriptions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Subscription ID
      responses:
        '200':
          description: Subscription details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '404':
          description: Subscription not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update subscription
      description: Fully update a subscription record
      tags:
        - Subscriptions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Subscription ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdate'
      responses:
        '200':
          description: Subscription updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Subscription not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      summary: Partially update subscription
      description: Partially update a subscription record
      tags:
        - Subscriptions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Subscription ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPatch'
      responses:
        '200':
          description: Subscription updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Subscription not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete subscription
      description: Delete a subscription record
      tags:
        - Subscriptions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Subscription ID
      responses:
        '204':
          description: Subscription deleted successfully
        '404':
          description: Subscription not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /subscriptions/summary/total-cost:
    get:
      summary: Get total subscription cost
      description: Calculate total cost of server for selected period with filtering
      tags:
        - Analytics
      parameters:
        - name: start_date
          in: query
          required: true
          schema:
            type: string
            pattern: '^\d{2}-\d{4}$'
          description: Start date in MM-YYYY format
        - name: end_date
          in: query
          required: true
          schema:
            type: string
            pattern: '^\d{2}-\d{4}$'
          description: End date in MM-YYYY format
        - name: user_ids
          in: query
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              format: uuid
          description: Comma-separated list of user IDs to filter by
        - name: service_names
          in: query
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
          description: Comma-separated list of service names to filter by
      responses:
        '200':
          description: Total cost calculation
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_cost:
                    type: integer
                    example: 1200
                  period:
                    type: object
                    properties:
                      start_date:
                        type: string
                      end_date:
                        type: string
                  filter_criteria:
                    type: object
                    properties:
                      user_ids:
                        type: array
                        items:
                          type: string
                      service_names:
                        type: array
                        items:
                          type: string
        '400':
          description: Invalid date range or parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    SubscriptionCreate:
      type: object
      required:
        - service_name
        - price
        - user_id
        - start_date
      properties:
        service_name:
          type: string
          example: "Yandex Plus"
        price:
          type: integer
          format: int32
          example: 400
        user_id:
          type: string
          format: uuid
          example: "60601fee-2bf1-4721-ae6f-7636e79a0cba"
        start_date:
          type: string
          pattern: '^\d{2}-\d{4}$'
          description: Date in MM-YYYY format
          example: "07-2025"
        end_date:
          type: string
          pattern: '^\d{2}-\d{4}$'
          nullable: true
          description: Optional end date in MM-YYYY format
          example: "08-2025"

    Subscription:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
        service_name:
          type: string
          example: "Yandex Plus"
        price:
          type: integer
          format: int32
          example: 400
        user_id:
          type: string
          format: uuid
          example: "60601fee-2bf1-4721-ae6f-7636e79a0cba"
        start_date:
          type: string
          pattern: '^\d{2}-\d{4}$'
          example: "07-2025"
        end_date:
          type: string
          pattern: '^\d{2}-\d{4}$'
          nullable: true
          example: "08-2025"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    SubscriptionUpdate:
      type: object
      required:
        - service_name
        - price
        - user_id
        - start_date
      properties:
        service_name:
          type: string
        price:
          type: integer
          format: int32
        user_id:
          type: string
          format: uuid
        start_date:
          type: string
          pattern: '^\d{2}-\d{4}$'
        end_date:
          type: string
          pattern: '^\d{2}-\d{4}$'
          nullable: true

    SubscriptionPatch:
      type: object
      properties:
        service_name:
          type: string
        price:
          type: integer
          format: int32
        user_id:
          type: string
          format: uuid
        start_date:
          type: string
          pattern: '^\d{2}-\d{4}$'
        end_date:
          type: string
          pattern: '^\d{2}-\d{4}$'
          nullable: true

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        pages:
          type: integer

    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          example: "validation_error"
        message:
          type: string
          example: "Invalid input parameters"
        details:
          type: object
          additionalProperties: true
        code:
          type: integer
          format: int32
          example: 400
        timestamp:
          type: string
          format: date-time

  parameters:
    SubscriptionId:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: Subscription ID

  responses:
    NotFound:
      description: The requested resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Invalid input parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

tags:
  - name: Subscriptions
    description: Subscription management operations
  - name: Analytics
    description: Subscription analytics and reporting