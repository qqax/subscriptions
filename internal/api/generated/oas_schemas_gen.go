// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"time"

	"github.com/go-faster/jx"
	"github.com/google/uuid"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #/components/schemas/Error
type Error struct {
	Error     string          `json:"error"`
	Message   string          `json:"message"`
	Details   OptErrorDetails `json:"details"`
	Code      OptInt32        `json:"code"`
	Timestamp OptDateTime     `json:"timestamp"`
}

// GetError returns the value of Error.
func (s *Error) GetError() string {
	return s.Error
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// GetDetails returns the value of Details.
func (s *Error) GetDetails() OptErrorDetails {
	return s.Details
}

// GetCode returns the value of Code.
func (s *Error) GetCode() OptInt32 {
	return s.Code
}

// GetTimestamp returns the value of Timestamp.
func (s *Error) GetTimestamp() OptDateTime {
	return s.Timestamp
}

// SetError sets the value of Error.
func (s *Error) SetError(val string) {
	s.Error = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// SetDetails sets the value of Details.
func (s *Error) SetDetails(val OptErrorDetails) {
	s.Details = val
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val OptInt32) {
	s.Code = val
}

// SetTimestamp sets the value of Timestamp.
func (s *Error) SetTimestamp(val OptDateTime) {
	s.Timestamp = val
}

type ErrorDetails map[string]jx.Raw

func (s *ErrorDetails) init() ErrorDetails {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptErrorDetails returns new OptErrorDetails with value set to v.
func NewOptErrorDetails(v ErrorDetails) OptErrorDetails {
	return OptErrorDetails{
		Value: v,
		Set:   true,
	}
}

// OptErrorDetails is optional ErrorDetails.
type OptErrorDetails struct {
	Value ErrorDetails
	Set   bool
}

// IsSet returns true if OptErrorDetails was set.
func (o OptErrorDetails) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptErrorDetails) Reset() {
	var v ErrorDetails
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptErrorDetails) SetTo(v ErrorDetails) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptErrorDetails) Get() (v ErrorDetails, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptErrorDetails) Or(d ErrorDetails) ErrorDetails {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt32 returns new OptInt32 with value set to v.
func NewOptInt32(v int32) OptInt32 {
	return OptInt32{
		Value: v,
		Set:   true,
	}
}

// OptInt32 is optional int32.
type OptInt32 struct {
	Value int32
	Set   bool
}

// IsSet returns true if OptInt32 was set.
func (o OptInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt32) SetTo(v int32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt32) Get() (v int32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsNull returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetToNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPagination returns new OptPagination with value set to v.
func NewOptPagination(v Pagination) OptPagination {
	return OptPagination{
		Value: v,
		Set:   true,
	}
}

// OptPagination is optional Pagination.
type OptPagination struct {
	Value Pagination
	Set   bool
}

// IsSet returns true if OptPagination was set.
func (o OptPagination) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPagination) Reset() {
	var v Pagination
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPagination) SetTo(v Pagination) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPagination) Get() (v Pagination, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPagination) Or(d Pagination) Pagination {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSubscriptionsSummaryTotalCostGetOKFilterCriteria returns new OptSubscriptionsSummaryTotalCostGetOKFilterCriteria with value set to v.
func NewOptSubscriptionsSummaryTotalCostGetOKFilterCriteria(v SubscriptionsSummaryTotalCostGetOKFilterCriteria) OptSubscriptionsSummaryTotalCostGetOKFilterCriteria {
	return OptSubscriptionsSummaryTotalCostGetOKFilterCriteria{
		Value: v,
		Set:   true,
	}
}

// OptSubscriptionsSummaryTotalCostGetOKFilterCriteria is optional SubscriptionsSummaryTotalCostGetOKFilterCriteria.
type OptSubscriptionsSummaryTotalCostGetOKFilterCriteria struct {
	Value SubscriptionsSummaryTotalCostGetOKFilterCriteria
	Set   bool
}

// IsSet returns true if OptSubscriptionsSummaryTotalCostGetOKFilterCriteria was set.
func (o OptSubscriptionsSummaryTotalCostGetOKFilterCriteria) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSubscriptionsSummaryTotalCostGetOKFilterCriteria) Reset() {
	var v SubscriptionsSummaryTotalCostGetOKFilterCriteria
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSubscriptionsSummaryTotalCostGetOKFilterCriteria) SetTo(v SubscriptionsSummaryTotalCostGetOKFilterCriteria) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSubscriptionsSummaryTotalCostGetOKFilterCriteria) Get() (v SubscriptionsSummaryTotalCostGetOKFilterCriteria, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSubscriptionsSummaryTotalCostGetOKFilterCriteria) Or(d SubscriptionsSummaryTotalCostGetOKFilterCriteria) SubscriptionsSummaryTotalCostGetOKFilterCriteria {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSubscriptionsSummaryTotalCostGetOKPeriod returns new OptSubscriptionsSummaryTotalCostGetOKPeriod with value set to v.
func NewOptSubscriptionsSummaryTotalCostGetOKPeriod(v SubscriptionsSummaryTotalCostGetOKPeriod) OptSubscriptionsSummaryTotalCostGetOKPeriod {
	return OptSubscriptionsSummaryTotalCostGetOKPeriod{
		Value: v,
		Set:   true,
	}
}

// OptSubscriptionsSummaryTotalCostGetOKPeriod is optional SubscriptionsSummaryTotalCostGetOKPeriod.
type OptSubscriptionsSummaryTotalCostGetOKPeriod struct {
	Value SubscriptionsSummaryTotalCostGetOKPeriod
	Set   bool
}

// IsSet returns true if OptSubscriptionsSummaryTotalCostGetOKPeriod was set.
func (o OptSubscriptionsSummaryTotalCostGetOKPeriod) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSubscriptionsSummaryTotalCostGetOKPeriod) Reset() {
	var v SubscriptionsSummaryTotalCostGetOKPeriod
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSubscriptionsSummaryTotalCostGetOKPeriod) SetTo(v SubscriptionsSummaryTotalCostGetOKPeriod) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSubscriptionsSummaryTotalCostGetOKPeriod) Get() (v SubscriptionsSummaryTotalCostGetOKPeriod, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSubscriptionsSummaryTotalCostGetOKPeriod) Or(d SubscriptionsSummaryTotalCostGetOKPeriod) SubscriptionsSummaryTotalCostGetOKPeriod {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Pagination
type Pagination struct {
	Page  OptInt `json:"page"`
	Limit OptInt `json:"limit"`
	Total OptInt `json:"total"`
	Pages OptInt `json:"pages"`
}

// GetPage returns the value of Page.
func (s *Pagination) GetPage() OptInt {
	return s.Page
}

// GetLimit returns the value of Limit.
func (s *Pagination) GetLimit() OptInt {
	return s.Limit
}

// GetTotal returns the value of Total.
func (s *Pagination) GetTotal() OptInt {
	return s.Total
}

// GetPages returns the value of Pages.
func (s *Pagination) GetPages() OptInt {
	return s.Pages
}

// SetPage sets the value of Page.
func (s *Pagination) SetPage(val OptInt) {
	s.Page = val
}

// SetLimit sets the value of Limit.
func (s *Pagination) SetLimit(val OptInt) {
	s.Limit = val
}

// SetTotal sets the value of Total.
func (s *Pagination) SetTotal(val OptInt) {
	s.Total = val
}

// SetPages sets the value of Pages.
func (s *Pagination) SetPages(val OptInt) {
	s.Pages = val
}

// Ref: #/components/schemas/Subscription
type Subscription struct {
	ID          OptUUID      `json:"id"`
	ServiceName OptString    `json:"service_name"`
	Price       OptInt32     `json:"price"`
	UserID      OptUUID      `json:"user_id"`
	StartDate   OptString    `json:"start_date"`
	EndDate     OptNilString `json:"end_date"`
	CreatedAt   OptDateTime  `json:"created_at"`
	UpdatedAt   OptDateTime  `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *Subscription) GetID() OptUUID {
	return s.ID
}

// GetServiceName returns the value of ServiceName.
func (s *Subscription) GetServiceName() OptString {
	return s.ServiceName
}

// GetPrice returns the value of Price.
func (s *Subscription) GetPrice() OptInt32 {
	return s.Price
}

// GetUserID returns the value of UserID.
func (s *Subscription) GetUserID() OptUUID {
	return s.UserID
}

// GetStartDate returns the value of StartDate.
func (s *Subscription) GetStartDate() OptString {
	return s.StartDate
}

// GetEndDate returns the value of EndDate.
func (s *Subscription) GetEndDate() OptNilString {
	return s.EndDate
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Subscription) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Subscription) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *Subscription) SetID(val OptUUID) {
	s.ID = val
}

// SetServiceName sets the value of ServiceName.
func (s *Subscription) SetServiceName(val OptString) {
	s.ServiceName = val
}

// SetPrice sets the value of Price.
func (s *Subscription) SetPrice(val OptInt32) {
	s.Price = val
}

// SetUserID sets the value of UserID.
func (s *Subscription) SetUserID(val OptUUID) {
	s.UserID = val
}

// SetStartDate sets the value of StartDate.
func (s *Subscription) SetStartDate(val OptString) {
	s.StartDate = val
}

// SetEndDate sets the value of EndDate.
func (s *Subscription) SetEndDate(val OptNilString) {
	s.EndDate = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Subscription) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Subscription) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

func (*Subscription) subscriptionsIDGetRes()   {}
func (*Subscription) subscriptionsIDPatchRes() {}
func (*Subscription) subscriptionsIDPutRes()   {}
func (*Subscription) subscriptionsPostRes()    {}

// Ref: #/components/schemas/SubscriptionCreate
type SubscriptionCreate struct {
	ServiceName string    `json:"service_name"`
	Price       int32     `json:"price"`
	UserID      uuid.UUID `json:"user_id"`
	// Date in MM-YYYY format.
	StartDate string `json:"start_date"`
	// Optional end date in MM-YYYY format.
	EndDate OptNilString `json:"end_date"`
}

// GetServiceName returns the value of ServiceName.
func (s *SubscriptionCreate) GetServiceName() string {
	return s.ServiceName
}

// GetPrice returns the value of Price.
func (s *SubscriptionCreate) GetPrice() int32 {
	return s.Price
}

// GetUserID returns the value of UserID.
func (s *SubscriptionCreate) GetUserID() uuid.UUID {
	return s.UserID
}

// GetStartDate returns the value of StartDate.
func (s *SubscriptionCreate) GetStartDate() string {
	return s.StartDate
}

// GetEndDate returns the value of EndDate.
func (s *SubscriptionCreate) GetEndDate() OptNilString {
	return s.EndDate
}

// SetServiceName sets the value of ServiceName.
func (s *SubscriptionCreate) SetServiceName(val string) {
	s.ServiceName = val
}

// SetPrice sets the value of Price.
func (s *SubscriptionCreate) SetPrice(val int32) {
	s.Price = val
}

// SetUserID sets the value of UserID.
func (s *SubscriptionCreate) SetUserID(val uuid.UUID) {
	s.UserID = val
}

// SetStartDate sets the value of StartDate.
func (s *SubscriptionCreate) SetStartDate(val string) {
	s.StartDate = val
}

// SetEndDate sets the value of EndDate.
func (s *SubscriptionCreate) SetEndDate(val OptNilString) {
	s.EndDate = val
}

// Ref: #/components/schemas/SubscriptionPatch
type SubscriptionPatch struct {
	ServiceName OptString    `json:"service_name"`
	Price       OptInt32     `json:"price"`
	EndDate     OptNilString `json:"end_date"`
}

// GetServiceName returns the value of ServiceName.
func (s *SubscriptionPatch) GetServiceName() OptString {
	return s.ServiceName
}

// GetPrice returns the value of Price.
func (s *SubscriptionPatch) GetPrice() OptInt32 {
	return s.Price
}

// GetEndDate returns the value of EndDate.
func (s *SubscriptionPatch) GetEndDate() OptNilString {
	return s.EndDate
}

// SetServiceName sets the value of ServiceName.
func (s *SubscriptionPatch) SetServiceName(val OptString) {
	s.ServiceName = val
}

// SetPrice sets the value of Price.
func (s *SubscriptionPatch) SetPrice(val OptInt32) {
	s.Price = val
}

// SetEndDate sets the value of EndDate.
func (s *SubscriptionPatch) SetEndDate(val OptNilString) {
	s.EndDate = val
}

// Ref: #/components/schemas/SubscriptionUpdate
type SubscriptionUpdate struct {
	ServiceName string       `json:"service_name"`
	Price       int32        `json:"price"`
	UserID      uuid.UUID    `json:"user_id"`
	StartDate   string       `json:"start_date"`
	EndDate     OptNilString `json:"end_date"`
}

// GetServiceName returns the value of ServiceName.
func (s *SubscriptionUpdate) GetServiceName() string {
	return s.ServiceName
}

// GetPrice returns the value of Price.
func (s *SubscriptionUpdate) GetPrice() int32 {
	return s.Price
}

// GetUserID returns the value of UserID.
func (s *SubscriptionUpdate) GetUserID() uuid.UUID {
	return s.UserID
}

// GetStartDate returns the value of StartDate.
func (s *SubscriptionUpdate) GetStartDate() string {
	return s.StartDate
}

// GetEndDate returns the value of EndDate.
func (s *SubscriptionUpdate) GetEndDate() OptNilString {
	return s.EndDate
}

// SetServiceName sets the value of ServiceName.
func (s *SubscriptionUpdate) SetServiceName(val string) {
	s.ServiceName = val
}

// SetPrice sets the value of Price.
func (s *SubscriptionUpdate) SetPrice(val int32) {
	s.Price = val
}

// SetUserID sets the value of UserID.
func (s *SubscriptionUpdate) SetUserID(val uuid.UUID) {
	s.UserID = val
}

// SetStartDate sets the value of StartDate.
func (s *SubscriptionUpdate) SetStartDate(val string) {
	s.StartDate = val
}

// SetEndDate sets the value of EndDate.
func (s *SubscriptionUpdate) SetEndDate(val OptNilString) {
	s.EndDate = val
}

type SubscriptionsGetBadRequest Error

func (*SubscriptionsGetBadRequest) subscriptionsGetRes() {}

type SubscriptionsGetInternalServerError Error

func (*SubscriptionsGetInternalServerError) subscriptionsGetRes() {}

type SubscriptionsGetOK struct {
	Data       []Subscription `json:"data"`
	Pagination OptPagination  `json:"pagination"`
}

// GetData returns the value of Data.
func (s *SubscriptionsGetOK) GetData() []Subscription {
	return s.Data
}

// GetPagination returns the value of Pagination.
func (s *SubscriptionsGetOK) GetPagination() OptPagination {
	return s.Pagination
}

// SetData sets the value of Data.
func (s *SubscriptionsGetOK) SetData(val []Subscription) {
	s.Data = val
}

// SetPagination sets the value of Pagination.
func (s *SubscriptionsGetOK) SetPagination(val OptPagination) {
	s.Pagination = val
}

func (*SubscriptionsGetOK) subscriptionsGetRes() {}

type SubscriptionsIDDeleteInternalServerError Error

func (*SubscriptionsIDDeleteInternalServerError) subscriptionsIDDeleteRes() {}

// SubscriptionsIDDeleteNoContent is response for SubscriptionsIDDelete operation.
type SubscriptionsIDDeleteNoContent struct{}

func (*SubscriptionsIDDeleteNoContent) subscriptionsIDDeleteRes() {}

type SubscriptionsIDDeleteNotFound Error

func (*SubscriptionsIDDeleteNotFound) subscriptionsIDDeleteRes() {}

type SubscriptionsIDGetInternalServerError Error

func (*SubscriptionsIDGetInternalServerError) subscriptionsIDGetRes() {}

type SubscriptionsIDGetNotFound Error

func (*SubscriptionsIDGetNotFound) subscriptionsIDGetRes() {}

type SubscriptionsIDPatchBadRequest Error

func (*SubscriptionsIDPatchBadRequest) subscriptionsIDPatchRes() {}

type SubscriptionsIDPatchInternalServerError Error

func (*SubscriptionsIDPatchInternalServerError) subscriptionsIDPatchRes() {}

type SubscriptionsIDPatchNotFound Error

func (*SubscriptionsIDPatchNotFound) subscriptionsIDPatchRes() {}

type SubscriptionsIDPutBadRequest Error

func (*SubscriptionsIDPutBadRequest) subscriptionsIDPutRes() {}

type SubscriptionsIDPutInternalServerError Error

func (*SubscriptionsIDPutInternalServerError) subscriptionsIDPutRes() {}

type SubscriptionsIDPutNotFound Error

func (*SubscriptionsIDPutNotFound) subscriptionsIDPutRes() {}

type SubscriptionsPostBadRequest Error

func (*SubscriptionsPostBadRequest) subscriptionsPostRes() {}

type SubscriptionsPostInternalServerError Error

func (*SubscriptionsPostInternalServerError) subscriptionsPostRes() {}

type SubscriptionsSummaryTotalCostGetBadRequest Error

func (*SubscriptionsSummaryTotalCostGetBadRequest) subscriptionsSummaryTotalCostGetRes() {}

type SubscriptionsSummaryTotalCostGetInternalServerError Error

func (*SubscriptionsSummaryTotalCostGetInternalServerError) subscriptionsSummaryTotalCostGetRes() {}

type SubscriptionsSummaryTotalCostGetOK struct {
	TotalCost      OptInt                                              `json:"total_cost"`
	Period         OptSubscriptionsSummaryTotalCostGetOKPeriod         `json:"period"`
	FilterCriteria OptSubscriptionsSummaryTotalCostGetOKFilterCriteria `json:"filter_criteria"`
}

// GetTotalCost returns the value of TotalCost.
func (s *SubscriptionsSummaryTotalCostGetOK) GetTotalCost() OptInt {
	return s.TotalCost
}

// GetPeriod returns the value of Period.
func (s *SubscriptionsSummaryTotalCostGetOK) GetPeriod() OptSubscriptionsSummaryTotalCostGetOKPeriod {
	return s.Period
}

// GetFilterCriteria returns the value of FilterCriteria.
func (s *SubscriptionsSummaryTotalCostGetOK) GetFilterCriteria() OptSubscriptionsSummaryTotalCostGetOKFilterCriteria {
	return s.FilterCriteria
}

// SetTotalCost sets the value of TotalCost.
func (s *SubscriptionsSummaryTotalCostGetOK) SetTotalCost(val OptInt) {
	s.TotalCost = val
}

// SetPeriod sets the value of Period.
func (s *SubscriptionsSummaryTotalCostGetOK) SetPeriod(val OptSubscriptionsSummaryTotalCostGetOKPeriod) {
	s.Period = val
}

// SetFilterCriteria sets the value of FilterCriteria.
func (s *SubscriptionsSummaryTotalCostGetOK) SetFilterCriteria(val OptSubscriptionsSummaryTotalCostGetOKFilterCriteria) {
	s.FilterCriteria = val
}

func (*SubscriptionsSummaryTotalCostGetOK) subscriptionsSummaryTotalCostGetRes() {}

type SubscriptionsSummaryTotalCostGetOKFilterCriteria struct {
	UserIds      []string `json:"user_ids"`
	ServiceNames []string `json:"service_names"`
}

// GetUserIds returns the value of UserIds.
func (s *SubscriptionsSummaryTotalCostGetOKFilterCriteria) GetUserIds() []string {
	return s.UserIds
}

// GetServiceNames returns the value of ServiceNames.
func (s *SubscriptionsSummaryTotalCostGetOKFilterCriteria) GetServiceNames() []string {
	return s.ServiceNames
}

// SetUserIds sets the value of UserIds.
func (s *SubscriptionsSummaryTotalCostGetOKFilterCriteria) SetUserIds(val []string) {
	s.UserIds = val
}

// SetServiceNames sets the value of ServiceNames.
func (s *SubscriptionsSummaryTotalCostGetOKFilterCriteria) SetServiceNames(val []string) {
	s.ServiceNames = val
}

type SubscriptionsSummaryTotalCostGetOKPeriod struct {
	StartDate OptString `json:"start_date"`
	EndDate   OptString `json:"end_date"`
}

// GetStartDate returns the value of StartDate.
func (s *SubscriptionsSummaryTotalCostGetOKPeriod) GetStartDate() OptString {
	return s.StartDate
}

// GetEndDate returns the value of EndDate.
func (s *SubscriptionsSummaryTotalCostGetOKPeriod) GetEndDate() OptString {
	return s.EndDate
}

// SetStartDate sets the value of StartDate.
func (s *SubscriptionsSummaryTotalCostGetOKPeriod) SetStartDate(val OptString) {
	s.StartDate = val
}

// SetEndDate sets the value of EndDate.
func (s *SubscriptionsSummaryTotalCostGetOKPeriod) SetEndDate(val OptString) {
	s.EndDate = val
}
