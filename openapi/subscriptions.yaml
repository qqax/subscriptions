openapi: 3.0.0
info:
  title: Subscription Management API
  description: API for managing user subscriptions and calculating total subscription costs.
  version: 1.0.0
servers:
  - url: https://api.example.com/v1
    description: Production server

components:
  schemas:
    Subscription:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the subscription.
        service_name:
          type: string
          example: Yandex Plus
          description: Name of the service providing the subscription.
        price:
          type: integer
          example: 400
          description: Monthly subscription price in rubles.
        user_id:
          type: string
          format: uuid
          example: 60601fee-2bf1-4721-ae6f-7636e79a0cba
          description: Unique identifier of the user.
        start_date:
          type: string
          format: date
          example: '2025-07-01'
          description: Start date of the subscription.
        end_date:
          type: string
          format: date
          example: '2026-07-01'
          description: Optional end date of the subscription.

    SubscriptionCreate:
      type: object
      required:
        - service_name
        - price
        - user_id
        - start_date
      properties:
        service_name:
          type: string
          example: Yandex Plus
          description: Name of the service providing the subscription.
        price:
          type: integer
          example: 400
          description: Monthly subscription price in rubles.
        user_id:
          type: string
          format: uuid
          example: 60601fee-2bf1-4721-ae6f-7636e79a0cba
          description: Unique identifier of the user.
        start_date:
          type: string
          format: date
          example: '2025-07-01'
          description: Start date of the subscription.
        end_date:
          type: string
          format: date
          example: '2026-07-01'
          description: Optional end date of the subscription.

    SubscriptionUpdate:
      type: object
      properties:
        service_name:
          type: string
          example: Yandex Plus
          description: Name of the service providing the subscription.
        price:
          type: integer
          example: 400
          description: Monthly subscription price in rubles.
        user_id:
          type: string
          format: uuid
          example: 60601fee-2bf1-4721-ae6f-7636e79a0cba
          description: Unique identifier of the user.
        start_date:
          type: string
          format: date
          example: '2025-07-01'
          description: Start date of the subscription.
        end_date:
          type: string
          format: date
          example: '2026-07-01'
          description: Optional end date of the subscription.

  responses:
    SubscriptionNotFound:
      description: Subscription not found.
    Unauthorized:
      description: Unauthorized access.

paths:
  /subscriptions:
    get:
      summary: Retrieve a list of subscriptions.
      operationId: getSubscriptions
      parameters:
        - name: user_id
          in: query
          description: Filter subscriptions by user ID.
          required: false
          schema:
            type: string
            format: uuid
        - name: service_name
          in: query
          description: Filter subscriptions by service name.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of subscriptions.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
        '401':
          $ref: '#/components/responses/Unauthorized'

    post:
      summary: Create a new subscription.
      operationId: createSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCreate'
      responses:
        '201':
          description: Subscription created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /subscriptions/{id}:
    get:
      summary: Retrieve a subscription by ID.
      operationId: getSubscriptionById
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the subscription.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A subscription object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '404':
          $ref: '#/components/responses/SubscriptionNotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

    put:
      summary: Update a subscription by ID.
      operationId: updateSubscription
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the subscription.
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdate'
      responses:
        '200':
          description: Subscription updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '404':
          $ref: '#/components/responses/SubscriptionNotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

    delete:
      summary: Delete a subscription by ID.
      operationId: deleteSubscription
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the subscription.
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Subscription deleted successfully.
        '404':
          $ref: '#/components/responses/SubscriptionNotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /subscriptions/total:
    post:
      summary: Calculate the total subscription cost over a specified period.
      operationId: calculateTotalSubscriptionCost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  format: date
                  example: '2025-07-01'
                  description: Start date of the period in YYYY-MM-DD format.
                end_date:
                  type: string
                  format: date
                  example: '2026-07-01'
                  description: End date of the period in YYYY-MM-DD format.
                user_id:
                  type: string
                  format: uuid
                  example: '60601fee-2bf1-4721-ae6f-7636e79a0cba'
                  description: Optional filter by user ID.
                service_name:
                  type: string
                  example: 'Yandex Plus'
                  description: Optional filter by service name.
              required:
                - start_date
                - end_date
      responses:
        '200':
          description: Total subscription cost calculated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_cost:
                    type: integer
                    example: 4800
                    description: Total cost of subscriptions in rubles for the specified period.
        '400':
          description: Invalid input parameters.
        '401':
          description: Unauthorized access.
        '404':
          description: Subscriptions not found for the specified criteria.
        '500':
          description: Internal server error.
